<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于TravisCI实现 Hexo 在 Github 和 Coding 的同步部署</title>
    <url>/posts/3e5a3bb5.html</url>
    <content><![CDATA[<p>&emsp;&emsp;关于TravisCI我这里简单介绍一下，TravisCI是一个在线的、分布式的持续集成服务，可以用来构建和测试托管在Github上的代码，并且其本身就是开源的。TravisCI提供了主流编程语言如C#、Java、JavaScript、Ruby、PHP、Node.js等的支持，相比Jenkins而言，它是一个轻量级的持续集成平台，它会在每次提交代码后，根据配置文件来创建一个虚拟机，并执行用户定义的Build任务，这个虚拟机提供版本控制(Git)、项目构建(Node.js)等，在此前提下，我们下面着手Hexo的自动化部署。</p>
<p>&emsp;&emsp;其原理就是Github和Coding（<code>小插曲：Coding现在已经被腾讯收购了</code>）各为TravisCI分配一个token，当我们向 Github 推送新的代码以后，TravisCI就会从代码仓库中拉取代码，并通过 npm 安装依赖生成静态页面，我们将这些静态页面推送到 master 分支，即可完成对Hexo的部署操作。</p>
<p>&emsp;&emsp;对于我个人博客是以 Github 作为代码的主仓库，其上面的 blog-source 分支存放博客的源代码，master 分支存放博客的静态页面，在此基础上，我们同时推送静态页面到 Github 和 Coding 的代码仓库，这样就可以实现两个平台的同步部署，这里的部署自然是指由 Travis 完成的自动化部署。整体的流程如下图所示：</p>
<p><img src="https://s2.ax1x.com/2019/10/21/KlNiCR.png" alt="Travis自动构建流程图"></p>
<h1 id="Github相关操作"><a href="#Github相关操作" class="headerlink" title="Github相关操作"></a><em>Github相关操作</em></h1><ul>
<li>1、按规定仓库名称为 <code>XXXXX.github.io</code>，其中 <code>XXXXX</code> 为你的用户名，进行创建仓库。<br><img src="https://s2.ax1x.com/2019/10/21/Kl0wjI.png" alt="Github建库"></li>
<li>2、建好仓库以后我们在仓库中新建一个分支放博客源码，我这里命名为 <code>blog-source</code>，建好以后将源码提交到该分支下即可。<br><img src="https://s2.ax1x.com/2019/10/22/K3szy4.png" alt="blog-source"></li>
<li>3、为了使 Travis 能够将编译好的文件 push 回咱们的 Github，我们需要生成 <code>token</code>，步骤如下：<br>   &emsp;&nbsp;&nbsp;&nbsp;&Delta;在 Github 上 Setting 中找到 <a href="https://github.com/settings/tokens" rel="external nofollow noopener noreferrer" target="_blank">Personal access tokens</a> 设置。<br>   &emsp;&nbsp;&nbsp;&nbsp;&Delta;点 Generate new token，为 <code>token</code> 起一个名字，勾选 repo，然后点击生成一个新的 <code>token</code> ，并复制下来记录好，待会下面 Travis 配置会用到。（这个只会出现一次！！）</li>
</ul>
<h1 id="Coding相关操作"><a href="#Coding相关操作" class="headerlink" title="Coding相关操作"></a><em>Coding相关操作</em></h1><ul>
<li>1、因为腾讯云已经收购了 <a href="https://coding.net" rel="external nofollow noopener noreferrer" target="_blank">Coding</a> ，所以我们直接在 <a href="https://dev.tencent.com/production" rel="external nofollow noopener noreferrer" target="_blank">腾讯云开发者平台</a> 注册账号来管理我们的仓库。</li>
<li>2、注册完毕后我们新建一个名为 <code>XXXXX.coding.me</code> 的项目，其中 <code>XXXXX</code> 为你的用户名，基本操作与 Github 一致，实在不会的可以留言。</li>
<li>3、Coding可以和 Github 一样可以生成一个 <code>token</code> 如下图，成功以后将 <code>token</code> 保存好，一会下面会用到。<br><img src="https://s2.ax1x.com/2019/10/22/K34SXV.png" alt="blog-source"></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>TravisCI</tag>
        <tag>Github</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建本地个人博客（基础篇）</title>
    <url>/posts/e1b9c6c5.html</url>
    <content><![CDATA[<blockquote>
<p><strong>初识Hexo</strong></p>
</blockquote>
<p>&emsp;&emsp;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" rel="external nofollow noopener noreferrer" target="_blank">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><em>安装Hexo</em></h2><p>&emsp;&emsp;建立Hexo只需要几分钟，安装Hexo非常简单。但是，您首先需要安装其他一些东西。</p>
<ul>
<li><a href="http://nodejs.org/" rel="external nofollow noopener noreferrer" target="_blank">Node.js</a> (Node.js 版本需不低于 8.6，建议使用 Node.js 10.0 及以上版本)</li>
<li><a href="http://git-scm.com/" rel="external nofollow noopener noreferrer" target="_blank">Git</a></li>
</ul>
<p>&emsp;&emsp;如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>

<p>&emsp;&emsp;如果没有，那就一起来看下面吧(<code>这里只说一下windows的安装，因为本人现在比较穷，买不起mac啊 テ_デ，其他相关教程大家就去搜搜很多的。</code>)</p>
<h3 id="emsp-emsp-安装git"><a href="#emsp-emsp-安装git" class="headerlink" title="&emsp;&emsp;安装git"></a>&emsp;&emsp;<em>安装git</em></h3><p><img src="https://s2.ax1x.com/2019/10/21/KlpZvD.md.png" alt="安装git"></p>
<div class="image-caption">安装git.png</div>
<a href="https://git-scm.com/downloads" class="LinkCard" rel="external nofollow noopener noreferrer" target="_blank">安装地址</a>

<p>&emsp;&emsp;一切按照默认走就行了，没什么特殊的地方，安装完成之后检查git是否安装成功（执行一下cmd命令），显示版本号即为成功！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></div>

<h3 id="emsp-emsp-安装Node-js"><a href="#emsp-emsp-安装Node-js" class="headerlink" title="&emsp;&emsp;安装Node.js"></a>&emsp;&emsp;<em>安装Node.js</em></h3><p><img src="https://s2.ax1x.com/2019/10/21/KlpmKe.md.png" alt="安装Node.js"></p>
<div class="image-caption">安装Node.js.png</div>

<p><a href="https://nodejs.org/en/" class="LinkCard" rel="external nofollow noopener noreferrer" target="_blank">安装地址</a></p>
<p>&emsp;&emsp;我们这里简单点，直接下载并运行安装程序就完了，还是走默认就行，安装完成之后检查node是否安装成功（执行一下cmd命令），显示版本号即为成功！</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></div>

<h3 id="emsp-emsp-安装Hexo"><a href="#emsp-emsp-安装Hexo" class="headerlink" title="&emsp;&emsp;安装Hexo"></a>&emsp;&emsp;<em>安装Hexo</em></h3><p>&emsp;&emsp;所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>

<h2 id="利用Hexo初始化我们的站点跟目录-文件"><a href="#利用Hexo初始化我们的站点跟目录-文件" class="headerlink" title="利用Hexo初始化我们的站点跟目录(文件)"></a><em>利用Hexo初始化我们的站点跟目录(文件)</em></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;文件夹&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;文件夹&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></div>

<p>&emsp;&emsp;选择你想要的盘符来建立我们的博客站点文件,我这里选择D:\blog，这里的blog是你的文件夹名字（根据自己的喜好建一个文件夹）</p>
<p><img src="https://s2.ax1x.com/2019/10/21/KlPjo9.png" alt="init hexo"></p>
<p>&emsp;&emsp;cd到你的站点目录下，然后 初始化站点$ npm install，执行成功后到你的blog文件夹下看看是否这样的（一致就成功啦~~）</p>
<p><img src="https://s2.ax1x.com/2019/10/21/Klkwa4.png" alt="blog"></p>
<p>&emsp;&emsp;介绍几个个命令 ,以后经常要用到的</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMD"><figure class="iseeu highlight /cmd"><table><tr><td class="code"><pre><span class="line">hexo g: 编译,生成静态文件，也就是public文件夹的东西。</span><br><span class="line">hexo s: 开启本地服务(以上两步的操作可以合并成hexo s -g)。</span><br><span class="line">hexo clean: 顾名思义就是清除缓存的意思了啦，这招一般在你改动之后网站没有变化时候用。</span><br></pre></td></tr></table></figure></div>

<p>&emsp;&emsp;接下来看看 你博客的初步成果吧。</p>
<p>&emsp;&emsp;进入blog文件根目录:</p>
<p>&emsp;&emsp;&emsp;&emsp;执行命令: hexo g 和 hexo s</p>
<p>&emsp;&emsp;然后在你的浏览器输入<code>http://localhost:4000</code>，查看你的博客。</p>
<p><img src="https://s2.ax1x.com/2019/10/21/KlAJFH.png" alt="blog首页"></p>
<p>&emsp;到此为止，你的个人博客就已经搭建完成了。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/27514.html</url>
    <content><![CDATA[<p><font size="4">Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</font></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p>
]]></content>
  </entry>
</search>
